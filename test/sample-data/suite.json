{
  "title": "Test Suite - Basic",
  "suites": [],
  "tests": [
    {
      "title": "should be passing test if true is not false",
      "fullTitle": "Master Test Suite Test Suite - Basic should be passing test if true is not false",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "flaky": false,
      "pending": false,
      "code": "true.should.be.ok;\ndone();",
      "err": {},
      "isRoot": false,
      "uuid": "5c3ec47f-307f-4a35-b77a-d0d218acbc4d",
      "parentUUID": "17bc6546-127d-4fc2-84b7-4aa033a8d2d3",
      "skipped": false
    },
    {
      "title": "should fail when returned object does not match expected object",
      "fullTitle": "Master Test Suite Test Suite - Basic should fail when returned object does not match expected object",
      "timedOut": false,
      "duration": 11,
      "state": "failed",
      "pass": false,
      "fail": true,
      "flaky": false,
      "pending": false,
      "code": "var o = retObj();\no.should.eql({});\ndone();",
      "err": {
        "name": "AssertionError",
        "actual": "{\n  \"employees\": {\n    \"employee\": [\n      {\n        \"firstName\": \"Tom\"\n        \"id\": \"1\"\n        \"lastName\": \"Cruise\"\n      }\n      {\n        \"firstName\": \"Maria\"\n        \"id\": \"2\"\n        \"lastName\": \"Sharapova\"\n      }\n      {\n        \"firstName\": \"James\"\n        \"id\": \"3\"\n        \"lastName\": \"Bond\"\n      }\n    ]\n  }\n}",
        "expected": "{}",
        "operator": "to equal",
        "message": "expected { employees: \n   { employee: \n      [ { id: '1', firstName: 'Tom', lastName: 'Cruise' },\n        { id: '2', firstName: 'Maria', lastName: 'Sharapova' },\n        { id: '3', firstName: 'James', lastName: 'Bond' } ] } } to equal {}",
        "generatedMessage": true,
        "showDiff": true,
        "estack": "AssertionError: expected { employees: \n   { employee: \n      [ { id: '1', firstName: 'Tom', lastName: 'Cruise' },\n        { id: '2', firstName: 'Maria', lastName: 'Sharapova' },\n        { id: '3', firstName: 'James', lastName: 'Bond' } ] } } to equal {}\n    at Assertion.prop.(anonymous function) (node_modules/should/lib/should.js:61:14)\n    at Context.<anonymous> (test-functional/test.js:38:16)",
        "diff": "- {\n-   \"employees\": {\n-     \"employee\": [\n-       {\n-         \"firstName\": \"Tom\"\n-         \"id\": \"1\"\n-         \"lastName\": \"Cruise\"\n-       }\n-       {\n-         \"firstName\": \"Maria\"\n-         \"id\": \"2\"\n-         \"lastName\": \"Sharapova\"\n-       }\n-       {\n-         \"firstName\": \"James\"\n-         \"id\": \"3\"\n-         \"lastName\": \"Bond\"\n-       }\n-     ]\n-   }\n- }\n+ {}\n"
      },
      "isRoot": false,
      "uuid": "9624c695-05c7-4042-9cda-e251d27be2fe",
      "parentUUID": "17bc6546-127d-4fc2-84b7-4aa033a8d2d3",
      "skipped": false
    }
  ],
  "pending": [],
  "root": false,
  "_timeout": 2000,
  "file": "/test-functional/test.js",
  "uuid": "17bc6546-127d-4fc2-84b7-4aa033a8d2d3",
  "fullFile": "/Users/adamgruber/Sites/mochawesome/test-functional/test.js",
  "passes": ["5c3ec47f-307f-4a35-b77a-d0d218acbc4d"],
  "failures": ["9624c695-05c7-4042-9cda-e251d27be2fe"],
  "skipped": [],
  "duration": 12
}
