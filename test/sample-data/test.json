{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "flaky": 0,
    "start": "2017-06-05T12:31:54.955Z",
    "end": "2017-06-05T12:31:54.968Z",
    "duration": 13,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "title": "",
      "suites": [
        {
          "title": "Main Suite",
          "suites": [],
          "tests": [
            {
              "title": "should be true",
              "fullTitle": "Main Suite should be true",
              "timedOut": false,
              "duration": 3,
              "state": "failed",
              "pass": false,
              "fail": true,
              "flaky": false,
              "pending": false,
              "code": "// true.should.eql(bool);\nexp.should.eql({\n  foo: true,\n  bar: true,\n  baz: 1\n});\nshouldAddContext && addContext(this, 'context');",
              "err": {
                "operator": "to equal",
                "expected": "{\n  \"bar\": true\n  \"baz\": 1\n  \"foo\": true\n}",
                "details": "at bar, A has false and B has true",
                "showDiff": true,
                "actual": "{\n  \"bar\": false\n  \"baz\": 1\n  \"foo\": true\n}",
                "negate": false,
                "assertion": {
                  "obj": {
                    "foo": true,
                    "bar": false,
                    "baz": 1
                  },
                  "anyOne": false,
                  "negate": false,
                  "params": {
                    "operator": "to equal",
                    "expected": {
                      "foo": true,
                      "bar": true,
                      "baz": 1
                    },
                    "details": "at bar, A has false and B has true",
                    "showDiff": true,
                    "actual": {
                      "foo": true,
                      "bar": false,
                      "baz": 1
                    },
                    "negate": false,
                    "assertion": "[Circular ~.suites.suites.0.tests.0.err.assertion]"
                  },
                  "light": false
                },
                "_message": "expected Object { foo: true, bar: false, baz: 1 } to equal Object { foo: true, bar: true, baz: 1 } (at bar, A has false and B has true)",
                "generatedMessage": true,
                "estack": "AssertionError: expected Object { foo: true, bar: false, baz: 1 } to equal Object { foo: true, bar: true, baz: 1 } (at bar, A has false and B has true)\n    at Assertion.fail (node_modules/should/cjs/should.js:258:17)\n    at Assertion.value (node_modules/should/cjs/should.js:335:19)\n    at Context.<anonymous> (helpers.js:26:20)",
                "diff": " {\n-   \"bar\": false\n+   \"bar\": true\n   \"baz\": 1\n   \"foo\": true\n }\n"
              },
              "uuid": "b88d1dce-1332-4bd9-bc1a-9ce3bceb89e4",
              "parentUUID": "571df514-f199-464d-aa1e-aed923a241ec",
              "isHook": false,
              "skipped": false
            }
          ],
          "pending": [],
          "root": false,
          "_timeout": 2000,
          "file": "/cases/test.js",
          "uuid": "571df514-f199-464d-aa1e-aed923a241ec",
          "beforeHooks": [],
          "afterHooks": [],
          "fullFile": "/Users/adamgruber/Sites/ma-test/cases/test.js",
          "passes": [],
          "failures": ["b88d1dce-1332-4bd9-bc1a-9ce3bceb89e4"],
          "skipped": [],
          "duration": 3,
          "rootEmpty": false
        }
      ],
      "tests": [],
      "pending": [],
      "root": true,
      "_timeout": 2000,
      "uuid": "85326d2a-1546-4657-a3dc-8a210b578804",
      "beforeHooks": [],
      "afterHooks": [],
      "fullFile": "/Users/adamgruber/Sites/ma-test/cases/test.js",
      "file": "/cases/test.js",
      "passes": [],
      "failures": [],
      "skipped": [],
      "duration": 0,
      "rootEmpty": true
    }
  ]
}
